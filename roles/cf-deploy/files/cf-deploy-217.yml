---
name: ali-cf-((cf_release_version))
director_uuid: ((login_uuid))

releases:
- {name: ((cf_release_name)), version: ((cf_release_version))}

networks:
- name: private
  type: manual
  subnets:
  - range: 172.16.0.0/12
    gateway: ((internal_gw))
    #dns: [((internal_ip))]
    reserved: [((internal_ip))]
    static: ["172.16.0.10 - 172.16.0.100"]
    cloud_properties:
      security_group_id: ((security_group_id))
      vswitch_id: ((vswitch_id))

resource_pools:
- name: test-nats
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234                      # 镜像ID，必填
    instance_type: ecs.n4.small                            # 实例类型，必填
    instance_name: test-nats                              # 实例名称，选填
    system_disk: {size: 51200, type: cloud_efficiency}       # 系统盘配置，普通云盘选填，其他必填
    ephemeral_disk: {size: 51200, type: cloud_efficiency}    # bosh-agent需要的数据盘配置，必填

- name: test-nfs
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.small
    instance_name: test-nfs
    system_disk: {size: 51200, type: cloud_efficiency}
    ephemeral_disk: {size: 51200, type: cloud_efficiency}

- name: test-postgres
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.small
    instance_name: test-postgres
    system_disk: {size: 51200, type: cloud_efficiency}
    ephemeral_disk: {size: 51200, type: cloud_efficiency}

- name: test-cc
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.small
    instance_name: test-cc
    system_disk: {size: 51200, type: cloud_efficiency}
    ephemeral_disk: {size: 51200, type: cloud_efficiency}

- name: test-hm9000
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.small
    instance_name: test-hm9000
    system_disk: {size: 51200, type: cloud_efficiency}
    ephemeral_disk: {size: 51200, type: cloud_efficiency}

- name: test-doppler
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.small
    instance_name: test-doppler
    system_disk: {size: 51200, type: cloud_efficiency}
    ephemeral_disk: {size: 51200, type: cloud_efficiency}

- name: test-loggregator_trafficcontroller
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.small
    instance_name: test-loggregator_trafficcontroller
    system_disk: {size: 51200, type: cloud_efficiency}
    ephemeral_disk: {size: 51200, type: cloud_efficiency}

- name: test-uaa
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.small
    instance_name: test-uaa
    system_disk: {size: 51200, type: cloud_efficiency}
    ephemeral_disk: {size: 51200, type: cloud_efficiency}

- name: test-router
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.small
    instance_name: test-router
    system_disk: {size: 51200, type: cloud_efficiency}
    ephemeral_disk: {size: 51200, type: cloud_efficiency}

- name: test-dea
  network: private
  stemcell:
    name: ((stemcell_name))
    version: ((stemcell_version))
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.large
    instance_name: test-dea
    system_disk: {size: 51200, type: cloud_efficiency}
    ephemeral_disk: {size: 51200, type: cloud_efficiency}

compilation:
  workers: 1
  network: private
  reuse_compilation_vms: true
  cloud_properties:
    image_id: m-temp1234
    instance_type: ecs.n4.large
    ephemeral_disk: {size: 51200, type: cloud_efficiency}
    system_disk: {size: 51200, type: cloud_efficiency}

update:
  canaries: 1
  max_in_flight: 1
  serial: false
  canary_watch_time: 30000-600000
  update_watch_time: 5000-600000

jobs:
- name: nats
  instances: 1
  resource_pool: test-nats
  templates:
  - {name: nats, release: cf}
  networks:
  - name: private
    static_ips: [172.16.0.20]

- name: nfs
  instances: 1
  persistent_disk: 51200
  resource_pool: test-nfs
  templates:
  - {name: debian_nfs_server, release: cf}
  networks:
  - name: private
    static_ips: [172.16.0.21]

- name: postgres
  instances: 1
  persistent_disk: 51200
  resource_pool: test-postgres
  templates:
  - {name: postgres, release: cf}
  networks:
  - name: private
    static_ips: [172.16.0.22]
  update:
    serial: true

- name: cloud_controller
  instances: 2
  resource_pool: test-cc
  templates:
  - {name: cloud_controller_ng, release: cf}
  - {name: cloud_controller_worker, release: cf}
  - {name: cloud_controller_clock, release: cf}
  - {name: nfs_mounter, release: cf}
  networks:
  - name: private
    static_ips: [172.16.0.23, 172.16.0.33]
  propertis:
    nfs_server:
      address: 172.16.0.21
      allow_from_entries: [((internal_cidr))]

- name: hm9000
  instances: 1
  resource_pool: test-hm9000
  templates:
  - {name: hm9000, release: cf}
#  - {name: route_registrar, release: cf}
  networks:
  - name: private
    static_ips: [172.16.0.24]


- name: uaa
  instances: 1
  resource_pool: test-uaa
  templates:
  - {name: uaa, release: cf}
  networks:
  - name: private
    static_ips: [172.16.0.25]
  properties:
    login:
      catalina_opts: -Xmx768m -XX:MaxPermSize=256m
    uaa:
      admin:
        client_secret: PASSWORD
      batch:
        password: PASSWORD
        username: batch_user
      cc:
        client_secret: PASSWORD
      scim:
        userids_enabled: false
        users:
        - ((cf_user_email))|((cf_user_password))|scim.write,scim.read,openid,cloud_controller.admin
    uaadb:
      address: 172.16.0.22
      databases:
      - {name: uaadb, tag: uaa}
      db_scheme: postgresql
      port: 5524
      roles:
      - {name: uaaadmin, password: uaa-password, tag: admin}

- name: dea_ng
  instances: 1
  resource_pool: test-dea
  templates:
  - {name: dea_next, release: cf}
  networks:
  - name: private
    static_ips: [172.16.0.26]

- name: router
  instances: 1
  resource_pool: test-router
  templates:
  - {name: gorouter, release: cf}
  networks:
  - name: private
    static_ips: [172.16.0.27]
  properties:
    dropsonde: {enabled: true}

properties:
  networks: {apps: private}
  app_domains: [((xip_ip_domain))]
  domain: ((xip_ip_domain))
  system_domain: ((xip_ip_domain))
  system_domain_organization: default_organization
  support_address: http://support.cloudfoundry.com

  cc:
    allow_app_ssh_access: false
    bulk_api_password: PASSWORD
    db_encryption_key: PASSWORD
    default_running_security_groups: [public_networks, dns]
    default_staging_security_groups: [public_networks, dns]
    install_buildpacks:
    - {name: java_buildpack, package: buildpack_java}
#    - {name: ruby_buildpack, package: buildpack_ruby}
    - {name: nodejs_buildpack, package: buildpack_nodejs}
    - {name: go_buildpack, package: buildpack_go}
    - {name: python_buildpack, package: buildpack_python}
    - {name: php_buildpack, package: buildpack_php}
    - {name: staticfile_buildpack, package: buildpack_staticfile}
    - {name: binary_buildpack, package: buildpack_binary}
    internal_api_password: PASSWORD
    quota_definitions:
      default:
        memory_limit: 102400
        non_basic_services_allowed: true
        total_routes: 1000
        total_services: -1
    security_group_definitions:
    - name: private
      rules: []
    srv_api_uri: http://api.((xip_ip_domain))
    staging_upload_password: PASSWORD
    staging_upload_user: staging_upload_user

  ccdb:
    address: 172.16.0.22
    databases:
    - {name: ccdb, tag: cc}
    db_scheme: postgres
    port: 5524
    roles:
    - {name: ccadmin, password: cc-password, tag: admin}

  databases:
    databases:
    - {name: ccdb, tag: cc, citext: true}
    - {name: uaadb, tag: uaa, citext: true}
    port: 5524
    roles:
    - {name: ccadmin, password: cc-password, tag: admin}
    - {name: uaaadmin, password: uaa-password, tag: admin}

  dea_next:
    advertise_interval_in_seconds: 5
    heartbeat_interval_in_seconds: 10

  etcd:
    machines: [172.16.0.24]

  hm9000:
    url: http://hm9000.((xip_ip_domain))

  nats:
    machines: [172.16.0.20]
    password: nats-password
    port: 4222
    user: nats

  nfs_server:
    no_root_squash: true
    share_path: /var/vcap/nfs
    address: 172.16.0.21
    allow_from_entries: [172.16.0.0/24]

  uaa:
    no_ssl: true
    clients:
      gorouter:
        authorities: clients.read,clients.write,clients.admin,route.admin,route.advertise
        authorized-grant-types: client_credentials,refresh_token
        scope: openid,cloud_controller_service_permissions.read
        secret: PASSWORD
      cloud_controller_username_lookup:
        authorities: scim.userids
        authorized-grant-types: client_credentials
        secret: PASSWORD
      login:
        authorities: oauth.login,scim.write,clients.read,notifications.write,critical_notifications.write,emails.write,scim.useridsassword.write
        authorized-grant-types: authorization_code,client_credentials,refresh_token
        override: true
        redirect-uri: http://login.((xip_ip_domain)):8080/auth/cloudfoundry/callback
        scope: openid,oauth.approvals,cloud_controller.read,cloud_controller.write
        secret: PASSWORD
    jwt:
      signing_key: |
        -----BEGIN RSA PRIVATE KEY-----
        MIICXAIBAAKBgQDHFr+KICms+tuT1OXJwhCUmR2dKVy7psa8xzElSyzqx7oJyfJ1
        JZyOzToj9T5SfTIq396agbHJWVfYphNahvZ/7uMXqHxf+ZH9BL1gk9Y6kCnbM5R6
        0gfwjyW1/dQPjOzn9N394zd2FJoFHwdq9Qs0wBugspULZVNRxq7veq/fzwIDAQAB
        AoGBAJ8dRTQFhIllbHx4GLbpTQsWXJ6w4hZvskJKCLM/o8R4n+0W45pQ1xEiYKdA
        Z/DRcnjltylRImBD8XuLL8iYOQSZXNMb1h3g5/UGbUXLmCgQLOUUlnYt34QOQm+0
        KvUqfMSFBbKMsYBAoQmNdTHBaz3dZa8ON9hh/f5TT8u0OWNRAkEA5opzsIXv+52J
        duc1VGyX3SwlxiE2dStW8wZqGiuLH142n6MKnkLU4ctNLiclw6BZePXFZYIK+AkE
        xQ+k16je5QJBAN0TIKMPWIbbHVr5rkdUqOyezlFFWYOwnMmw/BKa1d3zp54VP/P8
        +5aQ2d4sMoKEOfdWH7UqMe3FszfYFvSu5KMCQFMYeFaaEEP7Jn8rGzfQ5HQd44ek
        lQJqmq6CE2BXbY/i34FuvPcKU70HEEygY6Y9d8J3o6zQ0K9SYNu+pcXt4lkCQA3h
        jJQQe5uEGJTExqed7jllQ0khFJzLMx0K6tj0NeeIzAaGCQz13oo2sCdeGRHO4aDh
        HH6Qlq/6UOV5wP8+GAcCQFgRCcB+hrje8hfEEefHcFpyKH+5g1Eu1k0mLrxK2zd+
        4SlotYRHgPCEubokb2S1zfZDWIXW3HmggnGgM949TlY=
        -----END RSA PRIVATE KEY-----

      verification_key: |
        -----BEGIN PUBLIC KEY-----
        MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDHFr+KICms+tuT1OXJwhCUmR2d
        KVy7psa8xzElSyzqx7oJyfJ1JZyOzToj9T5SfTIq396agbHJWVfYphNahvZ/7uMX
        qHxf+ZH9BL1gk9Y6kCnbM5R60gfwjyW1/dQPjOzn9N394zd2FJoFHwdq9Qs0wBug
        spULZVNRxq7veq/fzwIDAQAB
        -----END PUBLIC KEY-----

    url: http://uaa.((xip_ip_domain))

