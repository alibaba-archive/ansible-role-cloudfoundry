---

- name: mkdir bosh-init
  file: path="{{ download_dir }}/bosh-init" state=directory

- name: download bosh
  get_url:
    url: '{{ bosh_url }}'
    dest: '{{ download_dir }}'

- name: download dependence packages and files
  copy:
    src: '{{ item }}'
    dest: '{{ download_dir }}/'
  with_items:
      - '{{ bosh_cpi_url }}'
      - '{{ bosh_stemcell_url }}'

- name: copy pem
  copy:
    src: '{{ item }}'
    dest: '{{ download_dir }}/bosh-init'
  with_items:
    - bosh-init.pem
    - bosh-deploy-{{bosh_version}}.yml

- name: deploy bosh
  shell: '{{ item }}'
  args:
    chdir: '{{ download_dir }}/bosh-init'
  with_items:
    - bosh create-env ./bosh-deploy-{{bosh_version}}.yml --state=state.json --vars-store=creds.yml -v alicloud_region={{alicloud_region}} -v download_dir={{download_dir}} -v bosh_stemcell_package={{ bosh_stemcell_package }} -v director_name={{ director_name }} -v internal_cidr={{ internal_cidr }} -v internal_gw={{ internal_gw }} -v internal_ip={{ internal_ip }} -v access_key_id={{ alicloud_access_key }} -v secret_access_key={{ alicloud_secret_key }} -v default_key_name={{ default_key_name }} -v security_group_id={{ security_group_id }} --var-file private_key=./bosh-init.pem -v subnet_id={{ subnet_id }} -v bosh_version={{bosh_version}}
    - bosh int ./creds.yml --path /director_ssl/ca > ca-cert
    - bosh alias-env my-bosh -e {{ internal_ip }} --ca-cert ca-cert
    - bosh int ./creds.yml --path /admin_password > password

- name: get password
  command: awk 'NR==1{print}' password
  args:
    chdir: '{{ download_dir }}/bosh-init'
  register: secret_key


- name: set secret key and login
  shell: '{{ item }}'
  args:
    chdir: '{{ download_dir }}/bosh-init'
  with_items:
      - echo export BOSH_CLIENT=admin >> /etc/profile
      - echo export BOSH_CLIENT_SECRET=admin >> /etc/profile
      - . /etc/profile
      - echo bosh -e my-bosh l \<\< EOF > bosh_login.sh
      - echo admin >> bosh_login.sh
      - echo admin >> bosh_login.sh
      - echo EOF >> bosh_login.sh
      - chmod +x bosh_login.sh
      - ./bosh_login.sh
      - bosh -e my-bosh vms

- name: check login status and output login info
  shell: '{{ item }}'
  args:
    chdir: '{{ download_dir }}/bosh-init'
  with_items:
      - bosh -e my-bosh vms
      - bosh -e my-bosh env > login

- name: get uuid
  command: awk 'NR==2{print}' login
  args:
    chdir: '{{ download_dir }}/bosh-init'
  register: login_uuid

- name: remove useless file
  file:
    path: '{{ download_dir }}/bosh-init/{{ item }}'
    state: absent
  with_items:
    - ca-cert
    - password
    - login
    - bosh_login.sh