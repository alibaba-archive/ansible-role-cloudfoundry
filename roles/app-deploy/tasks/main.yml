---

- name: unarchive app
  unarchive:
    src: '{{ application_url }}'
    dest: '{{ download_dir }}'

- name: install pip
  pip:
    name: pexpect


- name: deploy bosh
  shell: bosh int ./cf-vars.yml --path /cf_admin_password > password
  args:
    chdir: '{{ cf_deploy_dir }}'

- name: get password
  command: awk 'NR==1{print}' password
  args:
    chdir: '{{ cf_deploy_dir }}'
  register: secret_key

- name: login cf cli
  command: cf login -a http://api.{{system_domain}} --skip-ssl-validation -u admin -p {{secret_key.stdout}}
  args:
      chdir: '{{ cf_deploy_dir }}'

#    command: cf login -a http://api.{{ system_domain }} -u {{ cf_user_email }} --skip-ssl-validation
#    command: cf login -a http://api.$CF_DOMAIN --skip-ssl-validation -u admin -p `bosh int ./cf-vars.yml --path /cf_admin_password`
#    responses:
#      '(?i)API endpoint' : '{{ cf_user_password }}'

#- name: login cf cli
#  expect:
##    command: cf login -a http://api.{{ system_domain }} -u {{ cf_user_email }} --skip-ssl-validation
#    command: cf login -a http://api.$CF_DOMAIN --skip-ssl-validation -u admin -p `bosh int ./cf-vars.yml --path /cf_admin_password`
#    responses:
#      '(?i)API endpoint' : '{{ cf_user_password }}'

- name: install app
  shell: '{{ item }}'
  args:
    chdir: '{{ download_dir }}/{{ application_name }}'
  with_items:
    - cf orgs
    - cf create-space {{ application_name }} -o {{ organization_name }}
    - cf target -o "{{ organization_name }}" -s "{{ application_name }}"
    - cf spaces
    - cf push {{ application_name }} -b staticfile_buildpack