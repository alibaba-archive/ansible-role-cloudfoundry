---


- name: create ecs instance and build network environment
  hosts: localhost
  tasks:
    - name: register region
      command: echo {{alicloud_region}}
      register: region

    - name: download releases shell script
      get_url:
        url: 'https://raw.githubusercontent.com/aliyun/cf-deployment/master/iaas-support/alicloud/download-releases.sh'
        dest: ./
        force: yes
        mode: 0755
      when: "'cn-' in region.stdout"

    - name: download cf-deployment
      get_url:
        url: 'https://raw.githubusercontent.com/cloudfoundry/cf-deployment/master/cf-deployment.yml'
        dest: ./
        force: yes
      when: "'cn-' in region.stdout"

    - name: create directory for cf releases
      file: path="./roles/cf-deploy/files" state=directory

    - name: create directory for bosh
      file: path="./roles/bosh-deploy/files" state=directory

    - name: download releases and create new cf-deployment
      shell: ./download-releases.sh cf-deployment.yml roles/cf-deploy/files/releases
      when: "'cn-' in region.stdout"

    - shell: terraform init && terraform destroy -force -var 'alicloud_access_key={{ alicloud_access_key }}' -var 'alicloud_secret_key={{ alicloud_secret_key }}' -var 'alicloud_region={{ alicloud_region }}' -var 'domain_name={{ system_domain }}'
      args:
        chdir: ./server
      when: delete

    - shell: terraform init && terraform apply --auto-approve -var 'alicloud_access_key={{ alicloud_access_key }}' -var 'alicloud_secret_key={{ alicloud_secret_key }}' -var 'alicloud_region={{ alicloud_region }}' -var 'domain_name={{ system_domain }}'
      args:
        chdir: ./server
      when: not delete

- name: start deploying
  hosts: CloudFoundaryServer
  remote_user: root
  roles:
    - bosh-cli
    - bosh-deploy
    - cf-deploy
    - app-deploy
